# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  #push:
   # branches: 
    #  - master
  #schedule:
   #- cron: 0 20 * * *
  #release:
   # types: [published]
  #watch:
   # types: started

  workflow_dispatch:    
    
env:
  SSH: true
##on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
 ## push:
   ## branches: [ "main" ]
  ##pull_request:
    ##branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  ##workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Run a one-line script
       # run: echo Hello, world!
      
      - name: Space cleanup
        env:
          SSH_ACTIONS: true
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          #sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y install asciidoc binutils bzip2 gawk gettext git patch python3 unzip subversion p7zip p7zip-full msmtp libssl-dev autoconf 
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          pip install requirements.txt
          chmod 755 icsconverter.py
          df -h
      - name: SSH connection for testing
        if: env.SSH == 'true'
        uses: P3TERX/ssh2actions@main
        env:
         TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
         TELEGRAM_CHAT_ID: 1373335316
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo pwd
          icsconverter.py google_cal_08311.csv
          #echo 
          
      -  name: SSH connection for failure Debug
         if: ${{ failure() }}
           #uses: lhotari/action-upterm@v1
         uses: P3TERX/ssh2actions@main
         env:
          TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
          TELEGRAM_CHAT_ID: '1373335316'
